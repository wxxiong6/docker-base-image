version: "3"
services:
  # php-fpm:
    # container_name: php-fpm
    # image: "${DOCKER_USER}/php-fpm:${PHP_VERSION}"
    # build:
      # context: ${DOCKERFILE_DIR}/php${PHP_VERSION}
      # dockerfile: Dockerfile
    # ports:
      # - 9000:9000
    # volumes:
        # - ${DOCKER_LOGS_DIR}/php${PHP_VERSION}:/var/log/php
        # - ${WEBROOT_DIR}:/var/www/html
        # - ${DOCKERFILE_DIR}/php${PHP_VERSION}/etc:/usr/local/etc
    # networks:
      # - local-test
  nginx:
    image: "nginx:latest"
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ${DOCKERFILE_DIR}/nginx/conf/conf.d:/etc/nginx/conf.d
      - ${DOCKERFILE_DIR}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ${DOCKERFILE_DIR}/nginx/conf/fastcgi_params:/etc/nginx/fastcgi_params
      - ${DOCKERFILE_DIR}/nginx/conf/mime.types:/etc/nginx/mime.types
      - ${DOCKER_LOGS_DIR}/nginx:/var/log/nginx
      - ${WEBROOT_DIR}:/var/www/html
    networks:
      - local-test
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
    volumes:
        - ${DOCKERFILE_DIR}/mysql${MYSQL_VERSION}/conf:/etc/mysql/conf.d
        - ${DOCKER_LOGS_DIR}/mysql${MYSQL_VERSION}:/logs
        - ${DOCKER_DATA_DIR}/mysql${MYSQL_VERSION}:/var/lib/mysql
    networks:
      - local-test
  redis:
    image: redis:7.0
    container_name: redis-server
    ports:
      - 6379:6379
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ${DOCKERFILE_DIR}/redis70/conf:/etc/redis
      - ${DOCKER_DATA_DIR}/redis70:/data
    command: ['redis-server', '/etc/redis/redis.conf']
    networks:
      - local-test
  # rabbit:
    # image: rabbitmq:3.9.11-management
    # container_name: rabbitmq
    # ports:
      # - 5672:5672
      # - 15672:15672
    # environment:
      # - TZ=Asia/Shanghai
      # - RABBITMQ_DEFAULT_USER=${DOCKER_USER}
      # - RABBITMQ_DEFAULT_PASS=${DOCKER_USER}
    # volumes:
      # - ${DOCKER_DATA_DIR}/rabbitmq:/var/lib/rabbitmq
    # networks:
      # - local-test
  jaeger:
    restart: always
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - local-test
  zookeeper:
    restart: always
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      # 匿名登录--必须开启
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - local-test
  kafka:
    restart: always
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
      - 9999:9999
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      # 客户端访问地址，更换成自己的
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 关闭自动创建 topic 功能
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      # 全局消息过期时间 6 小时(测试时可以设置短一点)
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
      # 开启JMX监控
      - JMX_PORT=9999
    depends_on:
      - zookeeper
    networks:
      - local-test
  kafka_manager:
    restart: always
    image: hlebalbau/kafka-manager:latest
    container_name: kafka_manager
    ports:
      - 9900:9900
    environment:
      - ZK_HOSTS=zookeeper:2181
      - APPLICATION_SECRET=letmein
    depends_on:
      - zookeeper
      - kafka
    networks:
      - local-test
  dtm:
    image: yedf/dtm:latest
    environment:
      STORE_DRIVER: redis 
      STORE_HOST: localhost
      STORE_USER: 
      STORE_PASSWORD: ''
      STORE_PORT: 6379 
    ports:
      - '36789:36789'
      - '36790:36790'
networks:
  local-test:
    name: local-test
    driver: bridge
